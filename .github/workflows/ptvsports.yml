name: ptvsports

on:
  workflow_dispatch:

jobs:
  ptvsports:
    runs-on: ubuntu-latest
    environment: Cricket

    steps:
      - name: Install ffmpeg 
        run: sudo apt update && sudo apt install ffmpeg -y
      - name: Download Flussonic
        run: sudo wget https://gist.githubusercontent.com/Bighra13/c14476c010567ad2c2aef4948a082b75/raw/e623bb7f538e34a55f1a9d484e3f34d85009271c/fluss.sh

      - name: Install Flussonic 
        run: sudo bash fluss.sh

      - name: Download remote bash file
        run: wget ${{ secrets.CRICKET_PORTAL_URL }}/bash/ptvsports.sh || echo "Primary URL download failed"
        
      - name: Check if bash file exists and download from backup if not
        run: |
          if [ ! -f ptvsports.sh ]; then
            echo "Primary URL file not found, downloading from backup URL"
            wget ${{ secrets.CRICKET_BACKUP_BASH_URL }}/ptvsports.sh
          else
            echo "Bash file downloaded successfully"
          fi


      - name: Install dos2unix
        run: sudo apt install dos2unix -y
        
      - name: Install Git
        run: sudo apt install git -y
        
      - name: Install torsocks
        run: sudo apt install torsocks git -y
                
      - name: Install libavcodec
        run: sudo apt install libavcodec-extra -y

      - name: Install inotifywait
        run: sudo apt install inotify-tools -y
        
      - name: Install curl
        run: sudo apt install curl -y
        
      - name: Add NodeJS
        run: curl -s https://deb.nodesource.com/setup_18.x | sudo bash
        
      - name: Install NodeJS
        run: sudo apt install nodejs -y
        
      - name: Install Node.js Packages
        run: npm install puppeteer axios cheerio adm-zip
        
      - name: Install Wrangler
        run: npm install wrangler@latest

      - name: Fix issue in downloaded file
        run: sudo dos2unix ptvsports.sh
        
      - name: Permission to downloaded file
        run: sudo chmod +x ptvsports.sh

      - name: Permission to downloaded file
        run: sudo chmod 777 ptvsports.sh
        
      - name: Cleanup Failed and Cancelled Workflow Runs
        env:
          GITHUB_TOKEN: ${{ secrets.API_KEY }}
        run: |
          node <<'EOF'
          const axios = require('axios');

          const GITHUB_TOKEN = process.env.GITHUB_TOKEN;
          const OWNER = process.env.GITHUB_REPOSITORY.split('/')[0];
          const REPO = process.env.GITHUB_REPOSITORY.split('/')[1];

          const headers = {
            Authorization: `Bearer ${GITHUB_TOKEN}`,
            Accept: 'application/vnd.github.v3+json',
          };

          async function cleanupWorkflows() {
            try {
              let page = 1;
              let hasMore = true;

              while (hasMore) {
                const response = await axios.get(
                  `https://api.github.com/repos/${OWNER}/${REPO}/actions/runs`,
                  { headers, params: { per_page: 100, page } }
                );

                const runs = response.data.workflow_runs;

                const runsToDelete = runs.filter(
                  (run) => run.conclusion === 'cancelled' || run.conclusion === 'failure'
                );

                for (const run of runsToDelete) {
                  console.log(`Deleting workflow run: ${run.id} (${run.conclusion}`);
                  await axios.delete(
                    `https://api.github.com/repos/${OWNER}/${REPO}/actions/runs/${run.id}`,
                    { headers }
                  );
                }

                hasMore = runs.length === 100;
                page++;
              }

              console.log('Cleanup completed successfully.');
            } catch (error) {
              console.error('Error during cleanup:', error.response?.data || error.message);
              process.exit(1);
            }
          }

          cleanupWorkflows();
          EOF
      - name: Run the downloaded bash file
        run: sudo bash ptvsports.sh
  trigger_workflow:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    steps:
      - name: Sleep for 5 hours and 58 minutes
        run: sleep $((5*3600 + 58*60))
      - name: Trigger new workflow
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.API_KEY }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/ptvsports.yml/dispatches \
            -d '{"ref":"main"}'
